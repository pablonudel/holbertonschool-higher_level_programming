Test cases for add_integer function

>>> add_integer = __import__('0-add_integer').add_integer

Adding positive to positive
>>> add_integer(1, 2)
3

Adding positive to negative
>>> add_integer(100, -2)
98

Adding only one number
>>> add_integer(2)
100

Adding float to integer
>>> add_integer(100.3, -2)
98

Adding float to float
>>> add_integer(1.3, 1.7)
3

Adding number to string
>>> add_integer(4, "School")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

Adding None
>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

Adding two negative numbers
>>> add_integer(-3, -5)
-8

Adding zero to a number
>>> add_integer(0, 5)
5

Adding large integers
>>> add_integer(123456789, 987654321)
1111111110

Adding large floats
>>> add_integer(1e10, 1e10)
20000000000

Adding a list
>>> add_integer([1, 2], 3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

Adding a dictionary
>>> add_integer(3, {"key": "value"})
Traceback (most recent call last):
    ...
TypeError: b must be an integer

Adding a tuple
>>> add_integer((1, 2), 3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

Adding a boolean
>>> add_integer(True, 3)
4

>>> add_integer(3, False)
3
